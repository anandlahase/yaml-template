name: Update and Merge Workflow

on:
  workflow_dispatch:
    inputs:
      choice:
        type: choice
        description: 'Select input to update'
        required: true
        default: 'extraVars'
        options:
          - extraVars
          - inventory
          - deploymentManifest

jobs:
  update_and_merge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: main
          path: job_repo

      - name: create branch
        uses: peterjgrainger/action-create-branch@v2.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: 'New_branch'

      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: new_branch
          path: job_repo
      - name: Create prod/ directories if not exist
        run: |
          if [ ! -d "prod/extraVars" ]; then
              mkdir -p prod/extraVars
          fi
          if [ ! -d "prod/inventory" ]; then
              mkdir -p prod/inventory
          fi
          if [ ! -d "prod/deploymentManifest" ]; then
              mkdir -p prod/deploymentManifest
          fi

      - name: path
        run: |
          pwd
          echo "Current directory: $(pwd)"
          ls -l ./non-prod/extraVars/

      - name: Validate Input
        id: validate_input
        run: |
          choice="${{ github.event.inputs.choice }}"
          if [[ $choice != "extraVars" && $choice != "inventory" && $choice != "deploymentManifest" ]]; then
            echo "Invalid choice. Please choose one of: extraVars, inventory, deploymentManifest"
            exit 1
          fi
          echo "::set-output name=CHOICE::$choice"

      - name: Run Script
        run: |
          choice="extraVars"
          case $choice in
            "extraVars")
              echo "Contents of non-prod/extraVars/ directory:"
              ls -l non-prod/extraVars/
              if [ -d "non-prod/extraVars/" ]; then
                cp non-prod/extraVars/*.json prod/extraVars/ || (echo "Failed to copy JSON files." && exit 1)
                echo "Inputs updated for $choice"
              else
                echo "Directory non-prod/extraVars/ does not exist."
                exit 1
              fi
              ;;
            "inventory")
              # Similarly handle other cases
              ;;
            "deploymentManifest")
              # Similarly handle other cases
              ;;
            *)
              echo "Invalid choice"
              exit 1
              ;;
          esac
        shell: bash


      - name: Git Add
        run: git add .

      - name: Git Commit
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git commit -m "Automated update of ${{ github.event.inputs.choice }} dropdown inputs"

      - name: Git Push
        run: git push origin HEAD

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          title: "Update ${{ github.event.inputs.choice }} dropdown inputs"
          branch: update-${{ github.event.inputs.choice }}-inputs
          commit-message: "Automated update of ${{ github.event.inputs.choice }} dropdown inputs"
          body: |
            Automated update of ${{ github.event.inputs.choice }} dropdown inputs.
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Approve pull request
        if: steps.create_pr.outcome == 'success'
        id: approve_pr
        uses: juliangruber/approve-pull-request-action@v2.0.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ steps.create_pr.outputs.pr_number }}
          repo: ${{ env.DESTINATION_GITHUB_ORG }}/${{ env.DESTINATION_REPO_NAME }}

      - name: Merge pull Request
        if: steps.create_pr.outcome == 'success' && steps.approve_pr.outcome == 'success'
        id: merge_pr
        uses: pascalgn/automerge-action@v0.15.5
        env:
          GITHUB_TOKEN: ${{ secrets.ANIKET_TEST_TOKEN }}
          PULL_REQUEST: ${{ env.DESTINATION_GITHUB_ORG }}/${{ env.DESTINATION_REPO_NAME }}/${{ steps.create_pr.outputs.pr_number }}
          UPDATE_METHOD: merge

      - name: Delete merge branch
        uses: dawidd6/action-delete-branch@v3
        with:
          github_token: ${{ secrets.ANIKET_TEST_TOKEN }}
          owner: ${{ env.DESTINATION_GITHUB_ORG }}
          repository: ${{ env.DESTINATION_REPO_NAME }}
          branches: ${{ env.TEMP_BRANCH }}
