name: Update and Merge Workflow

on:
  workflow_dispatch:
    inputs:
      choice:
        type: choice
        description: 'Select input to update'
        required: true
        default: 'extraVars'
        options:
          - extraVars
          - inventory
          - deploymentManifest

jobs:
  update_and_merge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: main

      - name: create branch
        uses: peterjgrainger/action-create-branch@v2.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: 'update-${{ github.event.inputs.choice }}-inputs'

  
      - name: Create prod/ directories if not exist
        run: |
          if [ ! -d "$(pwd)/prod/extraVars" ]; then
              mkdir -p $(pwd)/prod/extraVars
              touch $(pwd)/prod/extraVars/README.md
          fi
          if [ ! -d "$(pwd)/prod/inventory" ]; then
              mkdir -p $(pwd)/prod/inventory
              touch $(pwd)/prod/inventory/README.md
          fi
          if [ ! -d "$(pwd)/prod/deploymentManifest" ]; then
              mkdir -p $(pwd)/prod/deploymentManifest
              touch $(pwd)/prod/deploymentManifest/README.md
          fi
          ls -l $(pwd)/prod

      - name: Validate Input
        id: validate_input
        run: |
          choice="${{ github.event.inputs.choice }}"
          if [[ $choice != "extraVars" && $choice != "inventory" && $choice != "deploymentManifest" ]]; then
            echo "Invalid choice. Please choose one of: extraVars, inventory, deploymentManifest"
            exit 1
          fi
          echo "::set-output name=CHOICE::$choice"

      - name: Run Script
        run: |
          case $choice in
            "extraVars")
              echo "Contents of $(pwd)/non-prod/extraVars/ directory:"
              ls -l $(pwd)/non-prod/extraVars/
              if [ -d "$(pwd)/non-prod/extraVars/" ]; then
                cp $(pwd)/non-prod/extraVars/*.json $(pwd)/prod/extraVars/ || (echo "Failed to copy JSON files." && exit 1)
                echo "Inputs updated for $choice"
              else
                echo "Directory $(pwd)/non-prod/extraVars/ does not exist."
              fi
              ;;
            "inventory")
              # Similarly handle other cases
              ;;
            "deploymentManifest")
              # Similarly handle other cases
              ;;
            *)
              echo "Invalid choice"
              ;;
          esac
        shell: bash


      - name: Git Commit
        run: |
          ls -l $(pwd)/prod
          git add .
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git commit -m "Automated update of dropdown inputs"
          git checkout -b New_branch

    

      - name: Git Push
        run: git push -u origin update-${{ github.event.inputs.choice }}-inputs

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          title: "Update ${{ github.event.inputs.choice }} dropdown inputs"
          branch: update-${{ github.event.inputs.choice }}-inputs
          commit-message: "Automated update of ${{ github.event.inputs.choice }} dropdown inputs"
          body: |
            Automated update of ${{ github.event.inputs.choice }} dropdown inputs.
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Wait for Approval
        if: steps.create_pr.outputs.pull-request-created == 'true'
        uses: andstor/wait-for-conclusion-action@v2
        with:
          issue-number: ${{ steps.create_pr.outputs.pull-request-number }}
          checks: 'all'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge Pull Request
        if: steps.wait_for_approval.outputs.conclusion == 'success'
        uses: pascalgn/automerge-action@v0.15.5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          method: "squash"  # Or choose your preferred merge method

      - name: Delete Branch
        if: steps.merge_pr.outputs.pull-request-merged == 'true'
        uses: actions-ecosystem/action-delete-branch@v1
        with:
          branch: 'update-${{ github.event.inputs.choice }}-inputs'  # Branch name modification
          token: ${{ secrets.GITHUB_TOKEN }}
